---
import Nav from '../partials/nav.astro'
import Search from '../partials/search.astro'
import CategoriesNav from '../partials/categories-nav.astro'
import LayoutMask from '../theme/layout-mask.astro'

interface Props {
    lang: string;
    dir: string;
}

const {lang, dir} = Astro.props
---
<style lang="scss" is:global>

    /* Color */
    :root {
        scroll-behavior: smooth;

        --white-light: #FEFAE0;
        --white-dark: #eae6cf;
        --black-light: #475f2b;
        --black-dark: #283618;
        --black-dim: rgb(40, 54, 24, 0.8);
        --green: #49C055;
        --red: #ff5e32;
        --yellow: #FFC801;
        --blue-light: #38bdf8;
        --blue-dark: #5748AE;
        --blue-dim: rgba(87, 72, 174, 0.8);
        --gray-light: #bcbcbf;
        --gray-dark: #9ca3af;

        --dark-white-light: rgb(1, 18, 34);
        --dark-white-dark: #94a3b8;
        --dark-black-dark: #1e293b;
    }

    // mixins
    @mixin withRtl($property, $ltr-value, $rtl-value) {
        html[dir=ltr] & {
            #{$property}: $ltr-value !important;
        }

        html[dir=rtl] & {
            #{$property}: $rtl-value !important;
        }
    }

    // LTR-RTL padding
    .right-left-padding-1 {
        @include withRtl(padding, 0 1rem 0 0, 0 0 0 1rem);
    }
    .left-right-padding-1 {
        @include withRtl(padding, 0 0 0 1rem, 0 1rem 0 0);
    }
    .md-left-right-padding-1 {
        @media screen and (min-width:768px) {
            @include withRtl(padding, 0 0 0 1rem, 0 1rem 0 0);
        }
    }

    // LTR-RTL margin
    .right-left-margin-1 {
        @include withRtl(margin, 0 1rem 0 0, 0 0 0 1rem);
    }
    .left-right-margin-1 {
        @include withRtl(margin, 0 0 0 1rem, 0 1rem 0 0);
    }

    /* Fonts */
    .font-ibm-plex-sans {
        font-family: "IBM Plex Sans", sans-serif;
        font-optical-sizing: auto;
        font-weight: 400;
        font-style: normal;
    }
    
    /* Scrollbar */
    ::-webkit-scrollbar {
        width: 0.5rem;
    }
    ::-webkit-scrollbar-thumb {
        background: var(--black-light);
        border-radius: 0rem;
    }
    ::-webkit-scrollbar-track {
        background-color: var(--white-light);
    }
    ::-webkit-scrollbar-button {
        background-color: var(--black-dark);
        border-radius: 0rem;
    }
    ::-webkit-scrollbar-button:hover {
        background: var(--black-dark);
    }
    ::-webkit-scrollbar-thumb:hover {
        background: var(--black-dark);
    }
    html[class=dark] {
        ::-webkit-scrollbar-thumb {
            background: var(--blue-dark);
        }
        ::-webkit-scrollbar-track {
            background-color: var(--dark-black-dark);
        }
        ::-webkit-scrollbar-button {
            background-color: var(--blue-dark);
        }
        ::-webkit-scrollbar-button:hover {
            background: var(--blue-dark);
        }
        ::-webkit-scrollbar-thumb:hover {
            background: var(--blue-dark);
        }
    }
    @supports not selector(::-webkit-scrollbar) {
    
        * {
            scrollbar-width: auto;
            scrollbar-color: var(--white-light) var(--black-dark);
            scrollbar-gutter: stable both-edges;
        }
    }

    /* Main Theme */
    main {
        max-width: 768px;
        padding: 5rem 0.5rem;
        margin: 0rem auto;
    }
    #main-section {
        margin-top: 5rem;
    }
    .disabled {
        opacity: 0.6;
        cursor: default;
    }
    .markdown-content {
        h1 {
            font-size: 2.5rem;
            font-weight: bold;
            text-transform: capitalize;
        }
        h2 {
            font-size: 2.25rem;
            text-transform: capitalize;
            margin: 4rem 0 1.25rem 0;
        }
        ul {
            list-style: disc;
        }
        p {
            font-size: 1.125rem;
        }
    }
    .current-link {
        border: var(--white-light) 0.1rem solid;

        @media screen and (min-width:768px){
            border-top: unset;
            border-left: unset;
            border-right: unset;
        }
    }
    li.category-nav-item {
        &:has(.current-category-link) {
            background: var(--black-light);
            color: var(--white-dark);
            font-weight: bold;

            html[class=dark] & {
                background: var(--blue-dark);
            }
        }
        &:not(:has(.current-category-link)):hover {

            .category-name {
                background-color: var(--white-dark);
            }

            html[class=dark] & {

                .category-name {
                    background: var(--blue-light);
                }
            }
        }
    }
</style>
<script>
    // init lang and dir on html ele
    document.documentElement.lang = `${document.body.getAttribute('data-lang')}`
    document.documentElement.dir = `${document.body.getAttribute('data-dir')}`
    document.documentElement.classList.toggle('dark')

    // linkBtns disabled will preventDefault
    const linkBtns = document.querySelectorAll<HTMLElement>('.link-btn')
    linkBtns.forEach(linkBtn => {
        linkBtn.addEventListener('click', (e)=> {
            if(linkBtn.classList.contains('disabled')) {
                e.preventDefault()
            }
        })
    })
</script>
<html>
    <meta charset="utf-8" />
    <link rel="icon" href="/favicon.svg" type="image/svg+xml">
    <meta name="viewport" content="width=device-width" />
    <link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap" rel="stylesheet">
    <slot />

    <body data-lang={lang} data-dir={dir} class="bg-white-light dark:bg-dark-white-light text-base text-black-dark dark:text-white-light font-ibm-plex-sans">
        <LayoutMask />
        <Nav lang={lang}></Nav>
        <main>
            <Search lang={lang} />
            <CategoriesNav lang={lang} />
            <slot name="main" />
        </main>
    </body>
</html>