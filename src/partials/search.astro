---
import { getCollection } from 'astro:content'

interface Props {
    lang: string;
}

const {lang} = Astro.props
const posts = await getCollection('posts', post => {
    return post.slug.includes(lang)
})
const currentMeta = await getCollection('meta', meta => meta.id === lang)
---
<script>
    import Alpine from 'alpinejs'

    const searchInput = document.querySelector<HTMLInputElement>('#search-input')!
    const postsList = document.querySelector<HTMLElement>('#posts-list')!
    const postsListItems = document.querySelectorAll<HTMLElement>('#posts-list li')!

    searchInput.addEventListener('keyup', e => {
        const searchInputValue = (e.target as HTMLInputElement).value.trim()
        if(searchInputValue.length > 0) {
            postsList.style.visibility = 'visible';
            (Alpine.store('uiStore') as UiStore).showLayoutMask()
        }
        else {
            postsList.style.visibility = 'hidden';
            (Alpine.store('uiStore') as UiStore).hideLayoutMask()
        }

        postsListItems.forEach(item => {
            if(searchInputValue === "") {
                item.style.display = 'none'
                return
            }else if(item.innerText.toLowerCase().includes(searchInputValue.toLowerCase())) {
                item.style.display = 'block'
            } else {
                item.style.display = 'none'
            }
        })
    })
</script>
<section class="relative z-20">
    <input id="search-input" type="text" placeholder={currentMeta[0].data.btns.search} class="w-full bg-white-light dark:bg-dark-black-dark text-base-2 p-2 border border-black-dark" />
    <ul id="posts-list" 
        class="invisible
        absolute top-full left-0
        w-full max-h-60
        bg-white-light dark:bg-dark-black-dark
        text-base capitalize
        border border-white-dark overflow-y-scroll
        divide-y-[1px]
        [&_li]:border-white-dark 
        [&_li_a]:block [&_li_a]:px-2 [&_li_a]:py-2 [&_li_a:hover]:bg-white-dark [&_li_a:hover]:dark:bg-blue-light"
    >
        {
            posts.map(post => {
                return <li class="hidden">
                    <a href={`/${post.slug}/`} aria-label={post.data.title}>{post.data.title}</a>
                </li>
            })
        }
    </ul>
</section>