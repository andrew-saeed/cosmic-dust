---
import Logo from "./logo.astro"
import Burger from "../icons/burger.astro"
import LangPicker from "./lang-picker.astro"
import {getCollection} from "astro:content"

interface Props {
    lang: string;
}

const {lang} = Astro.props
const meta = await getCollection('meta')
const currentLangMeta = meta.filter(langMeta => {
    return langMeta.id === lang
})
const isCurrentPage = (regexStr:string) => {
    const {pathname} = Astro.url
    const regex = new RegExp(regexStr)
    return regex.test(pathname)
}
---
<script>
    const trigger = document.querySelector('#trigger')!
    const links = trigger.nextElementSibling! as HTMLElement
    links.style.maxHeight = '0px'
    trigger.addEventListener('click', () => {
        if(links.style.maxHeight === '0px') links.style.maxHeight = links.scrollHeight + 'px'
        else links.style.maxHeight = '0px'
    })
</script>
<nav class="bg-black-dark">
    <div id="nav-layout"
        class="max-w-screen-md grid grid-cols-[max-content_1fr_max-content] items-center justify-items-center
        text-white-light font-bold capitalize
        mx-auto md:p-2"
    >
        <div id="logo" 
            class="w-full max-w-[15rem]
            row-start-1 row-end-2 col-start-2 col-end-3 md:col-start-1 md:col-end-2
            py-2"
        >
            <Logo />
        </div>
        <div id="trigger" 
            class="w-[3rem]
            row-start-1 row-end-2 col-start-1 col-end-2 md:hidden
            cursor-pointer"
        >
            <Burger />
        </div>
        <ul id="links"
            class="max-h-0 md:!max-h-[unset] w-full
            flex flex-col md:flex-row
            row-start-2 row-end-3 md:row-start-1 md:row-end-2 col-start-1 col-end-4 md:col-start-2 md:col-end-3
            md-left-right-padding-1
            [&_li:first-of-type]:mt-4 [&_li:last-of-type]:mb-4 [&_li:first-of-type]:md:mt-0 [&_li:last-of-type]:md:mb-0
            overflow-hidden
            transition-[max-height] duration-300 ease-in-out"
        >
            {
                currentLangMeta[0]?.data.nav.map(item => {
                    return <li>
                        <a class:list={[{"current-link":isCurrentPage(item["current-page-regex"])} ,"w-full block text-center font-bold p-2 hover:bg-black-light"]} href={item.link}>{item.name}</a>
                    </li>
                })
            }
        </ul>
        <div 
            id="ctrls"
            class="h-full row-start-1 row-end-2 col-start-3 col-end-4"
        >
            <LangPicker lang={lang} />
        </div>
    </div>
</nav>