---
import type { CollectionEntry } from 'astro:content'

import { getCollection } from 'astro:content'
import Base from '../../layouts/base.astro'

interface Props {
	post: CollectionEntry<'posts'>;
    dir: string;
    lang: string;
    category: {
        name: string;
        "current-page-regex": string;
        id: number;
        slug: string;
    }
}

export async function getStaticPaths() {

    const langsMeta = await getCollection('meta')
    const posts = await getCollection('posts')
    const postsParams = posts.map(post => {
        const [lang, slug] = post.slug.split("/")
        const currentLangMeta = langsMeta.filter((langMeta) => langMeta.id === lang)[0]
        const currentCategory = currentLangMeta.data.categories.find(category => category.id === post.data['category-id'])
        return {
            params: {lang, slug}, 
            props: {
                post,
                dir: currentLangMeta.data.dir,
                lang,
                category: currentCategory
            }
        }
    })
    return postsParams
}

const {post, dir, lang, category} = Astro.props
const {Content} = await post.render()
---
<Base lang={lang} dir={dir}>
    <title>{post.data.title}</title>
	<meta name="description" content={post.data.title}>

    <section slot="main" id="main-section" class="markdown-content">
        <article>
            <header>
                <h1 class="text-large font-black capitalize leading-large">{post.data.title}</h1>
                <p class="text-base text-gray-dark leading-base">{post.data.date}</p>
                <p class="text-base-1 leading-base-1 uppercase">
                    <span class="inline-block px-2 border border-black-dark rounded-lg">{category.name}</span>
                </p>
            </header>
            <Content />
        </article>
    </section>
</Base>